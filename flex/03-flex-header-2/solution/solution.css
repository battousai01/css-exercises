/* this is some magical font-importing.  
you'll learn about it later. */
@import url('https://fonts.googleapis.com/css2?family=Besley:ital,wght@0,400;1,900&display=swap');

body {
  margin: 0;
  background: #eee;
  font-family: Besley, serif;
}

.header {
  background: white;
  border-bottom: 1px solid #ddd;
  box-shadow: 0 0 8px rgba(0,0,0,.1);
}

.profile-image {
  background: rebeccapurple;
  box-shadow: inset 2px 2px 4px rgba(0,0,0,.5);
  border-radius: 50%;
  width: 48px;
  height:  48px;
}

.logo {
  color: rebeccapurple;
  font-size: 32px;
  font-weight: 900;
  font-style: italic;
}

button {
  border: none;
  border-radius: 8px;
  background: rebeccapurple;
  color: white;
  padding: 8px 24px;
}

a {
  /* this removes the line under our links */
  text-decoration: none;
  color: rebeccapurple;
}

ul {
  list-style-type: none;
}

/* SOLUTION */

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
}

ul {
  display: flex;
  margin: 0;
  padding: 0;
  gap: 16px;
}

.left, .right {
  display: flex;
  align-items: center;
  gap: 16px;
}
/*Note  1. build left container to store item that display on the left side
   
    <div class="left">
      <div class="logo">
        LOGO
      </div>
      <ul class="links">
        <li><a href="google.com">link-one</a></li>
        <li><a href="google.com">link-two</a></li>
        <li><a href="google.com">link-three</a></li>
      </ul>
    </div>
          
          2. build right container to store item that display on the right side
              
   <div class="right">  
      <button class="notifications">
        1 new notification
      </button>
      <div class="profile-image"></div>
    </div>
        
          3. force the element in the header to display in row by display:flex

    .header{
        display: flex;
        }

          4. vertical center element in the header
     
    .header{
        display: flex;
        justify-content: space-between;
    }
    
          5. force the element in the left and right container to display in row 

      .left, .right {
          display: flex;
       
       }

          6. vertical center element in the left and right container

      .left, .right {
          display: flex;
          align-items: center;

        }

          7. force the element in <ul> to display in row
      
      ul{
          display: flex;
      }

          8. add space between item in <ul> (add space between <li>)
      
      ul{
          display: flex;
          gap: 8px;
      }

          9. add space between item in the left and right container

      .left, .right {
          display: flex;
          align-items: center;
          gap: 16px;
        }

          10. add space in header container 

        .header{
            display: flex;
            justify-content: space-between;
            padding: 8px;
        }

*/
